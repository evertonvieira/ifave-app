name: Release Workflow

on:
  push:
    branches:
      - develop  # O workflow será acionado em merges para a branch develop

jobs:

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: actions/checkout@v3
      - name: Restore Dependency Cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run build


  generate-tag:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js (ou outra linguagem que você estiver usando)
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Ajuste conforme sua necessidade

      - name: Install dependencies
        run: npm install  # Altere conforme seu gerenciador de pacotes

      - name: Generate Semantic Version
        id: version
        run: |
          npm version patch  # ou major/minor conforme necessário
          echo "::set-output name=new_version::$(node -p "require('./package.json').version")"

      - name: Create Tag
        run: |
          git tag "v${{ steps.version.outputs.new_version }}"
          git push origin "v${{ steps.version.outputs.new_version }}"

  prepare_tools:
    name: Prepare tools to generate the APK
    runs-on: ubuntu-latest
    needs: generate-tag
    steps:
      - name: Get code from the current repository
        uses: actions/checkout@v4

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          java-version: 17

      - name: Install Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: npm install --legacy-peer-deps

      - name: Convert Windows line endings to Linux from the gradlew file
        run: sudo apt update && sudo apt install dos2unix && cd android && dos2unix ./gradlew && cd ..

      - name: Make ./gradlew command executable
        run: cd android && chmod +x ./gradlew && cd ..

      - name: Build Ionic assets
        run: ionic capacitor build android --verbose

      - name: Copy generated assets from Ionic to Capacitor Android platform
        run: npx cap copy android && npx cap update android

      - name: Generate APK
        run: cd android && ./gradlew assembleDebug && cd ..

      - name: Upload generated APK to Github
        uses: actions/upload-artifact@v4
        with:
          name: ifave-apk
          path: ./android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 3

  create-release-branch:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs: prepare_tools
    if: success()  # Garante que o job só seja executado se a tag for gerada com sucesso

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release Branch
        run: |
          release_branch="release/${{ steps.version.outputs.new_version }}"
          git checkout -b "$release_branch"
          git push origin "$release_branch"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Release v${{ steps.version.outputs.new_version }}"
          body: "This PR is automatically generated for the release version."
          base: ${{ release_branch }}
